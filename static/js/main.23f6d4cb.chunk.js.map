{"version":3,"sources":["component/signupForm.js","component/dataTitle.js","component/dataValue.js","component/dataTable.js","component/title.js","App.js","serviceWorker.js","index.js"],"names":["SignupForm","props","updateData","dataName","data","map","val","name","initialValues","phoneNumber","email","disabled","validationSchema","Yup","test","includes","max","required","typeError","onSubmit","values","className","htmlFor","type","style","color","DataTitle","DataValue","modify","deletData","changeDataName","changeDataPhoneNumber","changeDataEmail","Val","index","key","data-index","value","onChange","errMsg1","errMsg2","errMsg3","onClick","DataTable","Title","App","useState","setData","disabledturn","setDisabledturn","push","e","arr","preChange","target","getAttribute","length","splice","reduce","a","v","match","preDelet","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.23f6d4cb.chunk.js","sourcesContent":["/* eslint-disable object-curly-newline */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst SignupForm = (props) => {\r\n  const { updateData, data } = props\r\n  const dataName = data.map((val) => val.name)\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        disabled: true,\r\n      }}\r\n      validationSchema={Yup.object({\r\n        name: Yup.string()\r\n          .test('usedName', 'name is taken', (val) => !dataName.includes(val))\r\n          .max(15, 'Must be 15 characters or less')\r\n          .required('Required'),\r\n        phoneNumber: Yup.number().typeError('Only number').required('Required'),\r\n        email: Yup.string().email('Invalid email address').required('Required'),\r\n      })}\r\n      onSubmit={(values) => {\r\n        updateData(values)\r\n      }}\r\n    >\r\n      <Form className=\"flex\">\r\n        <div>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <Field name=\"name\" type=\"text\" />\r\n          <p style={{ color: 'red' }}>\r\n            <ErrorMessage name=\"name\" />\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"phoneNumber\">Phone numbere</label>\r\n          <Field name=\"phoneNumber\" type=\"text\" />\r\n          <p style={{ color: 'red' }}>\r\n            <ErrorMessage name=\"phoneNumber\" />\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">E-mail</label>\r\n          <Field name=\"email\" type=\"email\" />\r\n          <p style={{ color: 'red' }}>\r\n            <ErrorMessage name=\"email\" />\r\n          </p>\r\n        </div>\r\n        <button type=\"submit\" className=\"submitBtn\">\r\n          Submit\r\n        </button>\r\n      </Form>\r\n    </Formik>\r\n  )\r\n}\r\nSignupForm.propTypes = {\r\n  data: PropTypes.string.isRequired,\r\n  updateData: PropTypes.func.isRequired,\r\n}\r\nexport default SignupForm\r\n","import React from 'react'\r\n\r\nfunction DataTitle() {\r\n  return (\r\n    <div>\r\n      <div className=\"flex dataTitle\">\r\n        <div>使用者姓名</div>\r\n        <div>使用者電話</div>\r\n        <div>使用者e-mail</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default DataTitle\r\n","/* eslint-disable object-curly-newline */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction DataValue(props) {\r\n  const { data, modify, deletData, changeDataName, changeDataPhoneNumber, changeDataEmail } = props\r\n\r\n  return (\r\n    <div>\r\n      {data.map((Val, index) => (\r\n        <div className=\"flex dataValue\" key={index}>\r\n          <div>\r\n            <input\r\n              data-index={index}\r\n              value={Val.name}\r\n              onChange={changeDataName}\r\n              disabled={Val.disabled}\r\n            />\r\n            <p>{Val.errMsg1}</p>\r\n          </div>\r\n          <div>\r\n            <input\r\n              data-index={index}\r\n              value={Val.phoneNumber}\r\n              onChange={changeDataPhoneNumber}\r\n              disabled={Val.disabled}\r\n            />\r\n            <p>{Val.errMsg2}</p>\r\n          </div>\r\n          <div>\r\n            <input\r\n              data-index={index}\r\n              value={Val.email}\r\n              onChange={changeDataEmail}\r\n              disabled={Val.disabled}\r\n            />\r\n            <p>{Val.errMsg3}</p>\r\n          </div>\r\n          <button type=\"button\" data-index={index} onClick={modify}>\r\n            {Val.disabled ? '修改' : '完成'}\r\n          </button>\r\n          <button type=\"button\" data-index={index} onClick={deletData}>\r\n            刪除\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\nDataValue.propTypes = {\r\n  data: PropTypes.string.isRequired,\r\n  modify: PropTypes.func.isRequired,\r\n  deletData: PropTypes.func.isRequired,\r\n  changeDataName: PropTypes.func.isRequired,\r\n  changeDataPhoneNumber: PropTypes.func.isRequired,\r\n  changeDataEmail: PropTypes.func.isRequired,\r\n}\r\nexport default DataValue\r\n","/* eslint-disable object-curly-newline */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DataTitle from './dataTitle'\r\nimport DataValue from './dataValue'\r\n\r\nfunction DataTable(props) {\r\n  const { data, modify, deletData, changeDataName, changeDataPhoneNumber, changeDataEmail } = props\r\n  return (\r\n    <div>\r\n      <DataTitle />\r\n      <DataValue\r\n        data={data}\r\n        modify={modify}\r\n        deletData={deletData}\r\n        changeDataName={changeDataName}\r\n        changeDataPhoneNumber={changeDataPhoneNumber}\r\n        changeDataEmail={changeDataEmail}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nDataTable.propTypes = {\r\n  data: PropTypes.string.isRequired,\r\n  modify: PropTypes.func.isRequired,\r\n  deletData: PropTypes.func.isRequired,\r\n  changeDataName: PropTypes.func.isRequired,\r\n  changeDataPhoneNumber: PropTypes.func.isRequired,\r\n  changeDataEmail: PropTypes.func.isRequired,\r\n}\r\nexport default DataTable\r\n","import React from 'react'\r\n\r\nfunction Title() {\r\n  return (\r\n    <div>\r\n      <h1>CRUD-Data</h1>\r\n    </div>\r\n  )\r\n}\r\nexport default Title\r\n","/* eslint-disable operator-linebreak */\r\nimport './App.css'\r\nimport React, { useState } from 'react'\r\nimport SignupForm from './component/signupForm'\r\nimport DataTable from './component/dataTable'\r\nimport Title from './component/title'\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([])\r\n  const [disabledturn, setDisabledturn] = useState(true)\r\n  const dataName = data.map((val) => val.name)\r\n  const usedName = (arr, value) => arr.reduce((a, v) => (v === value ? a + 1 : a + 0), 0)\r\n  function updateData(values) {\r\n    data.push(values)\r\n    setData([...data])\r\n  }\r\n  // 修改空白跳Required & 無法點擊完成 & 驗證數字、email、重複姓名\r\n  function modify(e) {\r\n    const preChange = [...data]\r\n    const index = e.target.getAttribute('data-index')\r\n    if (\r\n      preChange[index].name.length === 0 &&\r\n      preChange[index].phoneNumber.length === 0 &&\r\n      preChange[index].email.length === 0\r\n    ) {\r\n      preChange.splice(index, 1, {\r\n        ...preChange[index],\r\n        errMsg1: 'Required',\r\n        errMsg2: 'Required',\r\n        errMsg3: 'Required',\r\n      })\r\n      setData([...preChange])\r\n    } else if (\r\n      preChange[index].name.length === 0 ||\r\n      usedName(dataName, preChange[index].name) === 2\r\n    ) {\r\n      preChange.splice(index, 1, {\r\n        ...preChange[index],\r\n        errMsg1: 'Required and name is tanken',\r\n      })\r\n      setData([...preChange])\r\n    } else if (\r\n      preChange[index].phoneNumber.length === 0 ||\r\n      !preChange[index].phoneNumber.match(/^[0-9]*$/)\r\n    ) {\r\n      preChange.splice(index, 1, {\r\n        ...preChange[index],\r\n        errMsg2: 'Required and Only number',\r\n      })\r\n      setData([...preChange])\r\n    } else if (\r\n      preChange[index].email.length === 0 ||\r\n      !preChange[index].email.match(/^.+@[A-Za-z0-9_]+\\..+$/)\r\n    ) {\r\n      preChange.splice(index, 1, {\r\n        ...preChange[index],\r\n        errMsg3: 'Required and Invalid email address',\r\n      })\r\n      setData([...preChange])\r\n    } else {\r\n      setDisabledturn(!disabledturn)\r\n      preChange.splice(index, 1, {\r\n        ...preChange[index],\r\n        disabled: disabledturn,\r\n        errMsg1: '',\r\n        errMsg2: '',\r\n        errMsg3: '',\r\n      })\r\n      setData([...preChange])\r\n    }\r\n  }\r\n  // 刪除該欄位\r\n  function deletData(e) {\r\n    const preDelet = [...data]\r\n    const index = e.target.getAttribute('data-index')\r\n    preDelet.splice(index, 1)\r\n    setData([...preDelet])\r\n  }\r\n  // 改變該欄位姓名\r\n  function changeDataName(e) {\r\n    const preChange = [...data]\r\n    const index = e.target.getAttribute('data-index')\r\n    preChange.splice(index, 1, { ...preChange[index], name: e.target.value, errMsg1: '' })\r\n    setData([...preChange])\r\n  }\r\n  // 改變該欄位電話\r\n  function changeDataPhoneNumber(e) {\r\n    const preChange = [...data]\r\n    const index = e.target.getAttribute('data-index')\r\n    preChange.splice(index, 1, {\r\n      ...preChange[index],\r\n      phoneNumber: e.target.value,\r\n      errMsg2: '',\r\n    })\r\n    setData([...preChange])\r\n  }\r\n  // 改變該欄位E-mail\r\n  function changeDataEmail(e) {\r\n    const preChange = [...data]\r\n    const index = e.target.getAttribute('data-index')\r\n    preChange.splice(index, 1, { ...preChange[index], email: e.target.value, errMsg3: '' })\r\n    setData([...preChange])\r\n  }\r\n  return (\r\n    <div className=\"center\">\r\n      <Title />\r\n      <SignupForm updateData={updateData} data={data} />\r\n      <DataTable\r\n        data={data}\r\n        modify={modify}\r\n        deletData={deletData}\r\n        changeDataName={changeDataName}\r\n        changeDataPhoneNumber={changeDataPhoneNumber}\r\n        changeDataEmail={changeDataEmail}\r\n        disabledturn={disabledturn}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}